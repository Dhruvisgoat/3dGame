/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 tree.glb --instanceall 
Files: tree.glb [77.01KB] > /Users/dhruvyadav/3dGame/public/models/tree-transformed.glb [7.08KB] (91%)
Author: Sahir Virmani (https://sketchfab.com/sahirvirmani)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/giant-low-poly-tree-acfd2b7f80894848b56c2ac8e7e59572
Title: Giant Low Poly Tree
*/

import React, { useRef, useMemo, useContext, createContext } from 'react'
import { useGLTF, Merged } from '@react-three/drei'

const context = createContext()
export function Instances({ children, ...props }) {
  const { nodes } = useGLTF('/tree-transformed.glb')
  const instances = useMemo(
    () => ({
      Cylinder: nodes.Cylinder_0,
    }),
    [nodes],
  )
  return (
    <Merged meshes={instances} {...props}>
      {(instances) => <context.Provider value={instances} children={children} />}
    </Merged>
  )
}

export function Model(props) {
  const instances = useContext(context)
  return (
    <group {...props} dispose={null}>
      <instances.Cylinder rotation={[-Math.PI / 2, 0, 0]} scale={[0.407, 0.407, 2.721]} />
    </group>
  )
}

useGLTF.preload('/tree-transformed.glb')
